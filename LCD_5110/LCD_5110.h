/*
 *
 * LCD_5110.h
 *
 *  Created on: Oct 30, 2015
 *      Author: ADNAP TEAM
 *     Version: 1.0.1
 *
 */

#ifndef ADNAP_ROBOT_1_11_LCD_5110_LCD_5110_H_
#define ADNAP_ROBOT_1_11_LCD_5110_LCD_5110_H_

 /****************************************************************************
 * 									DEFINE
******************************************************************************/

#define RES		GPIO_PIN_0
#define SCE		GPIO_PIN_1
#define DC		GPIO_PIN_2
#define SCK	    GPIO_PIN_3
#define	SPIN	GPIO_PIN_4
#define MAX_X	84
#define MAX_Y	6          //bank 0 - bank 5

 /****************************************************************************
 * 									CONSTANT
******************************************************************************/

static char LCD_CMD  = 0;
static char LCD_DATA = 1;
/*
const unsigned char Picture[] = {
0x00, 0x80, 0x60, 0x10, 0x10, 0x08, 0xE8, 0x24, 0x24, 0x24, 0x42, 0xC2, 0x02, 0x02, 0x02, 0x02,
0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x04, 0x04, 0x04, 0x08, 0x08, 0x10,
0x10, 0x60, 0x80, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFC, 0x67, 0x67, 0xA5, 0xA5, 0xE7, 0x00, 0x00,
0x00, 0xC0, 0xFE, 0x7F, 0x07, 0x1E, 0xF8, 0xF0, 0x38, 0x86, 0xFF, 0x7F, 0x03, 0x40, 0xCE, 0x9E,
0x9B, 0xBB, 0xB3, 0xE6, 0x04, 0x80, 0xF8, 0xFF, 0x3F, 0x33, 0x33, 0x33, 0x1F, 0x0E, 0x00, 0x60,
0x70, 0x78, 0xEC, 0xE6, 0x7F, 0x2F, 0x00, 0x40, 0xC6, 0x83, 0x83, 0x9B, 0xFF, 0x66, 0x00, 0x78,
0xFC, 0x86, 0x83, 0x83, 0x7E, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xD0,
0x88, 0x08, 0x08, 0x88, 0xF0, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x07, 0x0C, 0x38, 0xCE,
0x8A, 0x0E, 0xC0, 0x40, 0x20, 0xE1, 0xC1, 0x00, 0x00, 0x00, 0xC1, 0x60, 0x20, 0x61, 0xC1, 0x00,
0xC0, 0xC0, 0x80, 0x01, 0x01, 0x01, 0x01, 0xC0, 0x20, 0x21, 0xC1, 0x01, 0xC0, 0x30, 0x10, 0x60,
0xC0, 0x00, 0xF0, 0x10, 0xB0, 0xE0, 0x01, 0x01, 0xC0, 0x20, 0x10, 0x10, 0xE0, 0x01, 0xE1, 0x91,
0x10, 0xE0, 0x00, 0xC0, 0xA0, 0x31, 0x21, 0x40, 0x80, 0x10, 0x38, 0x2C, 0x22, 0xE2, 0xBB, 0x8D,
0x43, 0x43, 0x67, 0xEF, 0x1F, 0x0E, 0x04, 0x03, 0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00,
0x00, 0x80, 0xC0, 0xC0, 0xC0, 0x01, 0x01, 0x03, 0x03, 0x03, 0x04, 0x04, 0x04, 0x04, 0x05, 0x07,
0x06, 0x07, 0x0D, 0x08, 0x0B, 0x0E, 0x07, 0x04, 0x04, 0x04, 0x04, 0x05, 0x07, 0x06, 0x07, 0x02,
0x02, 0x03, 0x06, 0x07, 0x05, 0x04, 0x07, 0x03, 0x03, 0xC2, 0xC2, 0x02, 0x02, 0x03, 0x06, 0x07,
0x08, 0x08, 0x08, 0x09, 0x07, 0xC3, 0xC4, 0xC4, 0xC5, 0xC3, 0xC6, 0x86, 0x05, 0x04, 0x0C, 0x0A,
0x05, 0x02, 0x01, 0x01, 0x03, 0x04, 0x06, 0x03, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x00, 0xFF, 0x00,
0x00, 0xFF, 0x00, 0x00, 0x7C, 0x7F, 0x7F, 0x63, 0x60, 0x60, 0x00, 0x00, 0x30, 0x6A, 0x6B, 0x6B,
0x7B, 0x7F, 0x3E, 0x00, 0x3E, 0x7F, 0x60, 0x20, 0x70, 0x3F, 0x0F, 0x60, 0x7C, 0x7F, 0x03, 0x03,
0x63, 0x7F, 0x1E, 0x00, 0x1C, 0x7E, 0x63, 0x63, 0x63, 0x36, 0x00, 0x60, 0x7E, 0x3F, 0x03, 0x03,
0x63, 0x7F, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x60, 0x7F, 0x7F, 0x0F, 0x0C, 0x0C, 0x0C, 0x07, 0x03,
0x00, 0x30, 0x6A, 0x6B, 0x6B, 0x7B, 0x7F, 0x3E, 0x00, 0x3C, 0x7E, 0x63, 0x63, 0x73, 0x7F, 0x3F,
0x01, 0x00, 0xFF, 0x00, 0x00, 0x01, 0x02, 0x04, 0x08, 0x08, 0x10, 0x10, 0x20, 0x20, 0x20, 0x20,
0x20, 0x20, 0x20, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
0x10, 0x10, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00,
};*/


static const char ASCII[][5] =
{
	 {0x00, 0x00, 0x00, 0x00, 0x00} // 20
	,{0x00, 0x00, 0x5f, 0x00, 0x00} // 21 !
	,{0x00, 0x07, 0x00, 0x07, 0x00} // 22 "
	,{0x14, 0x7f, 0x14, 0x7f, 0x14} // 23 #
	,{0x24, 0x2a, 0x7f, 0x2a, 0x12} // 24 $
	,{0x23, 0x13, 0x08, 0x64, 0x62} // 25 %
	,{0x36, 0x49, 0x55, 0x22, 0x50} // 26 &
	,{0x00, 0x05, 0x03, 0x00, 0x00} // 27 '
	,{0x00, 0x1c, 0x22, 0x41, 0x00} // 28 (
	,{0x00, 0x41, 0x22, 0x1c, 0x00} // 29 )
	,{0x14, 0x08, 0x3e, 0x08, 0x14} // 2a *
	,{0x08, 0x08, 0x3e, 0x08, 0x08} // 2b +
	,{0x00, 0x50, 0x30, 0x00, 0x00} // 2c ,
	,{0x08, 0x08, 0x08, 0x08, 0x08} // 2d -
	,{0x00, 0x60, 0x60, 0x00, 0x00} // 2e .
	,{0x20, 0x10, 0x08, 0x04, 0x02} // 2f /
	,{0x3e, 0x51, 0x49, 0x45, 0x3e} // 30 0
	,{0x00, 0x42, 0x7f, 0x40, 0x00} // 31 1
	,{0x42, 0x61, 0x51, 0x49, 0x46} // 32 2
	,{0x21, 0x41, 0x45, 0x4b, 0x31} // 33 3
	,{0x18, 0x14, 0x12, 0x7f, 0x10} // 34 4
	,{0x27, 0x45, 0x45, 0x45, 0x39} // 35 5
	,{0x3c, 0x4a, 0x49, 0x49, 0x30} // 36 6
	,{0x01, 0x71, 0x09, 0x05, 0x03} // 37 7
	,{0x36, 0x49, 0x49, 0x49, 0x36} // 38 8
	,{0x06, 0x49, 0x49, 0x29, 0x1e} // 39 9
	,{0x00, 0x36, 0x36, 0x00, 0x00} // 3a :
	,{0x00, 0x56, 0x36, 0x00, 0x00} // 3b ;
	,{0x08, 0x14, 0x22, 0x41, 0x00} // 3c <
	,{0x14, 0x14, 0x14, 0x14, 0x14} // 3d =
	,{0x00, 0x41, 0x22, 0x14, 0x08} // 3e >
	,{0x02, 0x01, 0x51, 0x09, 0x06} // 3f ?
	,{0x32, 0x49, 0x79, 0x41, 0x3e} // 40 @
	,{0x7e, 0x11, 0x11, 0x11, 0x7e} // 41 A
	,{0x7f, 0x49, 0x49, 0x49, 0x36} // 42 B
	,{0x3e, 0x41, 0x41, 0x41, 0x22} // 43 C
	,{0x7f, 0x41, 0x41, 0x22, 0x1c} // 44 D
	,{0x7f, 0x49, 0x49, 0x49, 0x41} // 45 E
	,{0x7f, 0x09, 0x09, 0x09, 0x01} // 46 F
	,{0x3e, 0x41, 0x49, 0x49, 0x7a} // 47 G
	,{0x7f, 0x08, 0x08, 0x08, 0x7f} // 48 H
	,{0x00, 0x41, 0x7f, 0x41, 0x00} // 49 I
	,{0x20, 0x40, 0x41, 0x3f, 0x01} // 4a J
	,{0x7f, 0x08, 0x14, 0x22, 0x41} // 4b K
	,{0x7f, 0x40, 0x40, 0x40, 0x40} // 4c L
	,{0x7f, 0x02, 0x0c, 0x02, 0x7f} // 4d M
	,{0x7f, 0x04, 0x08, 0x10, 0x7f} // 4e N
	,{0x3e, 0x41, 0x41, 0x41, 0x3e} // 4f O
	,{0x7f, 0x09, 0x09, 0x09, 0x06} // 50 P
	,{0x3e, 0x41, 0x51, 0x21, 0x5e} // 51 Q
	,{0x7f, 0x09, 0x19, 0x29, 0x46} // 52 R
	,{0x46, 0x49, 0x49, 0x49, 0x31} // 53 S
	,{0x01, 0x01, 0x7f, 0x01, 0x01} // 54 T
	,{0x3f, 0x40, 0x40, 0x40, 0x3f} // 55 U
	,{0x1f, 0x20, 0x40, 0x20, 0x1f} // 56 V
	,{0x3f, 0x40, 0x38, 0x40, 0x3f} // 57 W
	,{0x63, 0x14, 0x08, 0x14, 0x63} // 58 X
	,{0x07, 0x08, 0x70, 0x08, 0x07} // 59 Y
	,{0x61, 0x51, 0x49, 0x45, 0x43} // 5a Z
	,{0x00, 0x7f, 0x41, 0x41, 0x00} // 5b [
	,{0x02, 0x04, 0x08, 0x10, 0x20} // 5c Â¥
	,{0x00, 0x41, 0x41, 0x7f, 0x00} // 5d ]
	,{0x04, 0x02, 0x01, 0x02, 0x04} // 5e ^
	,{0x40, 0x40, 0x40, 0x40, 0x40} // 5f _
	,{0x00, 0x01, 0x02, 0x04, 0x00} // 60 `
	,{0x20, 0x54, 0x54, 0x54, 0x78} // 61 a
	,{0x7f, 0x48, 0x44, 0x44, 0x38} // 62 b
	,{0x38, 0x44, 0x44, 0x44, 0x20} // 63 c
	,{0x38, 0x44, 0x44, 0x48, 0x7f} // 64 d
	,{0x38, 0x54, 0x54, 0x54, 0x18} // 65 e
	,{0x08, 0x7e, 0x09, 0x01, 0x02} // 66 f
	,{0x0c, 0x52, 0x52, 0x52, 0x3e} // 67 g
	,{0x7f, 0x08, 0x04, 0x04, 0x78} // 68 h
	,{0x00, 0x44, 0x7d, 0x40, 0x00} // 69 i
	,{0x20, 0x40, 0x44, 0x3d, 0x00} // 6a j
	,{0x7f, 0x10, 0x28, 0x44, 0x00} // 6b k
	,{0x00, 0x41, 0x7f, 0x40, 0x00} // 6c l
	,{0x7c, 0x04, 0x18, 0x04, 0x78} // 6d m
	,{0x7c, 0x08, 0x04, 0x04, 0x78} // 6e n
	,{0x38, 0x44, 0x44, 0x44, 0x38} // 6f o
	,{0x7c, 0x14, 0x14, 0x14, 0x08} // 70 p
	,{0x08, 0x14, 0x14, 0x18, 0x7c} // 71 q
	,{0x7c, 0x08, 0x04, 0x04, 0x08} // 72 r
	,{0x48, 0x54, 0x54, 0x54, 0x20} // 73 s
	,{0x04, 0x3f, 0x44, 0x40, 0x20} // 74 t
	,{0x3c, 0x40, 0x40, 0x20, 0x7c} // 75 u
	,{0x1c, 0x20, 0x40, 0x20, 0x1c} // 76 v
	,{0x3c, 0x40, 0x30, 0x40, 0x3c} // 77 w
	,{0x44, 0x28, 0x10, 0x28, 0x44} // 78 x
	,{0x0c, 0x50, 0x50, 0x50, 0x3c} // 79 y
	,{0x44, 0x64, 0x54, 0x4c, 0x44} // 7a z
	,{0x00, 0x08, 0x36, 0x41, 0x00} // 7b {
	,{0x00, 0x00, 0x7f, 0x00, 0x00} // 7c |
	,{0x00, 0x41, 0x36, 0x08, 0x00} // 7d }
	,{0x10, 0x08, 0x08, 0x10, 0x08} // 7e
	,{0x78, 0x46, 0x41, 0x46, 0x78} // 7f
};

/****************************************************************************
* 									PROTOTYPE
******************************************************************************/

void Delay(volatile long time);
void LCDInit(unsigned char contrast,unsigned char coefficent,unsigned char bias);
void LCDClear();
void LCDCharacter(char character);
void LCDString(char *characters);
void gotoXY(int x, int y);
void LCDWrite(char data_or_command, unsigned char data);
void shiftOut(unsigned char txdata);
//void LCDPicture();

#endif /* ADNAP_ROBOT_1_11_LCD_5110_LCD_5110_H_ */
